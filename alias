alias cd..='cd ..'
alias ..='cd ..;ls'
alias ...='cd ../..'
alias aptu='aptitude update;aptitude upgrade;'
alias update='aptitude update;aptitude upgrade;'
alias apti='aptitude install'
alias apts='apt-cache search'
alias ll='ls -lv --group-directories-first'
alias ls='ls -h --color'
alias home='cd ~'
alias backport='apt-get -t squeeze-backports install'
alias ping='ping -c 10'
alias mx='chmod a+x'
alias 000='chmod 000'
alias 644='chmod 644'
alias 755='chmod 755'
alias la="ls -la"
alias sl="ls"
alias l="ls"
alias s="ls"
alias c='clear'
alias df='df -H'
alias mkdir='mkdir -p'
alias h='history'
alias j='jobs -l'
alias list_screen='screen -ls'
#-----------
# Searching:
#-----------
# ff:  to find a file under the current directory
ff () { /usr/bin/find . -name "$@" ; }
# ffs: to find a file whose name starts with a given string
ffs () { /usr/bin/find . -name "$@"'*' ; }
# ffe: to find a file whose name ends with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }
# zipf: to create a ZIP archive of a file or folder
zipf () { zip -r "$1".zip "$1" ; }
# numberLines: echo the lines of a file preceded by line number
numberLines () { perl -pe 's/^/$. /' "$@" ; }
# allStrings: show all strings (ASCII & Unicode) in a file
allStrings () { cat "$1" | tr -d "\0" | strings ; }
reboot='shutdown -r now'
service() { /etc/init.d/"$1" "$2" ;}
rmdir='rm -rf'
alias www='cd /var/www/'
alias backup='cd /var/backup/'
alias cls='clear;ls'
extract () {
  if [ -f "$1" ] ; then
    case "$1" in
      *.tar.bz2)   tar xvjf "$1"    ;;
      *.tar.gz)    tar xvzf "$1"    ;;
      *.tar.xz)    tar xvJf "$1"    ;;
      *.bz2)       bunzip2 "$1"     ;;
      *.rar)       unrar x "$1"     ;;
      *.gz)        gunzip "$1"      ;;
      *.tar)       tar xvf "$1"     ;;
      *.tbz2)      tar xvjf "$1"    ;;
      *.tgz)       tar xvzf "$1"    ;;
      *.zip)       unzip "$1"       ;;
      *.Z)         uncompress "$1"  ;;
      *.7z)        7z x "$1"        ;;
      *.xz)        unxz "$1"        ;;
      *.exe)       cabextract "$1"  ;;
      *)           echo "'$1': unrecognized file compression" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

